name: libplctag CI

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ macos, windows, ubuntu ]
        build_type: [ x86, x64 ]
        exclude:
          # excludes 32-bit on on macOS
          - os: macos-latest
            build_type: x86

    env:
      VERSION: "@VERSION@"
      ARTIFACT: "libplctag_@VERSION@_${{ matrix.os }}_${{ matrix.build_type }}.zip"
      BUILD: "${{ github.workspace }}/build"
      DIST: "${{ github.workspace }}/build/bin_dist"

    steps:
    - uses: actions/checkout@v2

    - name: Set up build environment
      if: matrix.os == ubuntu &&
        if: matrix.build_type == x64
            run: sudo apt update; sudo apt-get -y --force-yes install build-essential cmake
        else:
            run: sudo apt update; sudo apt-get -y --force-yes install build-essential cmake gcc-multilib g++-multilib

    - name: Create build directory
      run: rm -rf ${{ env.BUILD }}; mkdir -p ${{ env.BUILD }}

    - name: Configure CMake
      if: matrix.os == ubuntu
        if: matrix.build_type == x64
            run: cd ${{ env.BUILD }}; cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_32_BIT=0 ..
        else:
            run: cd ${{ env.BUILD }}; cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_32_BIT=1 ..
      if: matrix.os == windows
        if: matrix.build_type == x64
            run: cd ${{ env.BUILD }}; cmake .. -G "Visual Studio 16 2019" -A x64
        else:
            run: cd ${{ env.BUILD }}; cmake .. -G "Visual Studio 16 2019" -A Win32
      if: matrix.os == macos
        run: cd ${{ env.BUILD }}; cmake -DCMAKE_BUILD_TYPE=Release ..


    - name: Build
      run: cd ${{ env.BUILD }}; cmake --build . --config Release

    - name: Test
      run: echo "no-op for now"

    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.ARTIFACT }}
        path: ${{ env.DIST }}
